@page
@model loginModel
@{
    ViewData["Title"] = "LogIn";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>LogIn</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100vh;
            background-color: #E4E9F7;
            align-content: center;
        }

        .formcontainer {
            margin-top:20px;
            display: flex;
            flex-direction: column;
            min-height: 500px;
            width: 500px;
            padding: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);
            background: white;
        }

        .SousFormContainer{
            margin-top:40px;

        }

        h2 {
            text-align: center;
            margin-bottom: 20px;
            color: #333;
        }

        input:focus {
            border-color: #DAF7A6;
            outline: none;
            box-shadow: 0 0 5px rgba(218, 247, 166, 0.8);
        }

        .Btns {
            display: flex;
            justify-content: space-around;
            margin-top: 40px;
        }

        .Btn {
            color: #fff;
            border: none;
            border-radius: 20px;
            width: 90px;
            height: 43px;
            background-color: #0d6efd;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }



        a.link {
            text-decoration: none;
            color: #fff;
            text-align: center;
            text-align: center;
        }
    </style>
</head>
<body>


    <form method="post" class="formcontainer">
        <h2>Login</h2>
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger" role="alert">
                @Model.ErrorMessage
            </div>
        }

        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="alert alert-success" role="alert">
                @Model.SuccessMessage
            </div>
        }
        <div class="SousFormContainer">
            <div class="mb-3">
                <label for="username" class="form-label">Username</label>
                <input type="text" class="form-control" id="username" name="username" value="@Model.user.UserName" required>
            </div>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <input type="password" class="form-control" id="password" name="password" required>
                </br>
                <div class="form-check mt-2">
                    <input type="checkbox" class="form-check-input" id="showPassword" onclick="togglePassword()">
                    <label for="showPassword" class="form-check-label">Show Password</label>
                </div>
            </div>
            <div class="Btns">
                <button class="Btn" type="submit" class="btn btn-primary">Login</button>
                <button class="Btn" type="submit" class="btn btn-primary"><a class="link" href="https://localhost:44388/Sign-In">Sign Up</a></button>
            </div>
        </div>
    </form>


    <script>
        function togglePassword() {
            const passwordField = document.getElementById('password');
            passwordField.type = passwordField.type === 'password' ? 'text' : 'password';
        }
    </script>
</body>
</html>
